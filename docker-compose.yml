services:
  postgres:
    image: postgres:18-alpine
    env_file: .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - type: volume
        source: pg_data
        target: /var/lib/postgresql/data
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
    networks:
      - backend

  bot:
    image: ghcr.io/br0-space/bot:latest
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
    volumes:
      - type: bind
        source: ./config.yaml
        target: /opt/br0bot/config.yaml
        read_only: true
      - type: bind
        source: ./config/buzzwords.yaml
        target: /opt/br0bot/config/buzzwords.yaml
        read_only: true
    networks:
      - backend

volumes:
  pg_data:
    name: br0bot_postgres_data

networks:
  backend:
    name: br0bot_network
    driver: bridge
